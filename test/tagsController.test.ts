/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  CountryEnum,
  LocationTypeEnum,
  OrderEnum,
  ResponseTag,
  ResponseTagsCollection,
  TagsController,
  Type2Enum,
  Type3Enum,
  Type4Enum,
  Type72Enum,
  Type73Enum,
} from '../src';
import { testClient } from './testClient';
import {
  expectHeadersToMatch,
  expectMatchingWithOptions,
  makeApiCall,
} from './testHelper';

describe('TagsController', () => {
  let controller : TagsController;

  beforeAll(() => {
    controller = new TagsController(testClient);
  });

  it('should Test List all tags related', async () => {
    const response = await makeApiCall(
      () => controller.listAllTagsRelated(
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      )
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseTagsCollection = {
      type: Type73Enum.TagsCollection,
      list: [
        {
          locationId: '11e95f8ec39de8fbdb0a4f1a',
          title: 'My terminal',
          id: '11e95f8ec39de8fbdb0a4f1a',
          createdTs: 1422040992,
          modifiedTs: 1422040992,
          location: {
            id: '11e95f8ec39de8fbdb0a4f1a',
            createdTs: 1422040992,
            modifiedTs: 1422040992,
            accountNumber: '5454545454545454',
            address: {
              city: 'Novi',
              state: 'MI',
              postalCode: '48375',
              country: CountryEnum.US,
            },
            brandingDomainId: '11e95f8ec39de8fbdb0a4f1a',
            contactEmailTrxReceiptDefault: true,
            defaultAch: '11e608a7d515f1e093242bb2',
            defaultCc: '11e608a442a5f1e092242dda',
            emailReplyTo: 'email@domain.com',
            fax: '3339998822',
            locationApiId: 'location-111111',
            locationApiKey: 'AE34BBCAADF4AE34BBCAADF4',
            locationC1: 'custom 1',
            locationC2: 'custom 2',
            locationC3: 'custom data 3',
            name: 'Sample Company Headquarters',
            officePhone: '2481234567',
            officeExtPhone: '1021021209',
            tz: 'America/New_York',
            parentId: '11e95f8ec39de8fbdb0a4f1a',
            showContactNotes: true,
            showContactFiles: true,
            createdUserId: '11e95f8ec39de8fbdb0a4f1a',
            locationType: LocationTypeEnum.Merchant,
            ticketHashKey: 'A5F443CADF4AE34BBCAADF4',
          },
        }
      ],
      links: {
        type: Type2Enum.Links,
        first: '/v1/endpoint?page[size]=10&page[number]=1',
        previous: '/v1/endpoint?page[size]=10&page[number]=5',
        next: '/v1/endpoint?page[size]=10&page[number]=7',
        last: '/v1/endpoint?page[size]=10&page[number]=42',
      },
      pagination: {
        type: Type3Enum.Pagination,
        totalCount: 423,
        pageCount: 42,
        pageNumber: 6,
        pageSize: 10,
      },
      sort: {
        type: Type4Enum.Sorting,
        fields: [
          {
            field: 'last_name',
            order: OrderEnum.Asc,
          }
        ],
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test Delete tag record', async () => {
    const tagId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.deleteTagRecord(tagId)
    );

    expect(response.statusCode).toBe(204);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseTag = {
      type: Type72Enum.Tag,
      data: {
        locationId: '11e95f8ec39de8fbdb0a4f1a',
        title: 'My terminal',
        id: '11e95f8ec39de8fbdb0a4f1a',
        createdTs: 1422040992,
        modifiedTs: 1422040992,
        location: {
          id: '11e95f8ec39de8fbdb0a4f1a',
          createdTs: 1422040992,
          modifiedTs: 1422040992,
          accountNumber: '5454545454545454',
          address: {
            city: 'Novi',
            state: 'MI',
            postalCode: '48375',
            country: CountryEnum.US,
          },
          brandingDomainId: '11e95f8ec39de8fbdb0a4f1a',
          contactEmailTrxReceiptDefault: true,
          defaultAch: '11e608a7d515f1e093242bb2',
          defaultCc: '11e608a442a5f1e092242dda',
          emailReplyTo: 'email@domain.com',
          fax: '3339998822',
          locationApiId: 'location-111111',
          locationApiKey: 'AE34BBCAADF4AE34BBCAADF4',
          locationC1: 'custom 1',
          locationC2: 'custom 2',
          locationC3: 'custom data 3',
          name: 'Sample Company Headquarters',
          officePhone: '2481234567',
          officeExtPhone: '1021021209',
          tz: 'America/New_York',
          parentId: '11e95f8ec39de8fbdb0a4f1a',
          showContactNotes: true,
          showContactFiles: true,
          createdUserId: '11e95f8ec39de8fbdb0a4f1a',
          locationType: LocationTypeEnum.Merchant,
          ticketHashKey: 'A5F443CADF4AE34BBCAADF4',
        },
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test View single tags record', async () => {
    const tagId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.viewSingleTagsRecord(tagId, undefined, undefined)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseTag = {
      type: Type72Enum.Tag,
      data: {
        locationId: '11e95f8ec39de8fbdb0a4f1a',
        title: 'My terminal',
        id: '11e95f8ec39de8fbdb0a4f1a',
        createdTs: 1422040992,
        modifiedTs: 1422040992,
        location: {
          id: '11e95f8ec39de8fbdb0a4f1a',
          createdTs: 1422040992,
          modifiedTs: 1422040992,
          accountNumber: '5454545454545454',
          address: {
            city: 'Novi',
            state: 'MI',
            postalCode: '48375',
            country: CountryEnum.US,
          },
          brandingDomainId: '11e95f8ec39de8fbdb0a4f1a',
          contactEmailTrxReceiptDefault: true,
          defaultAch: '11e608a7d515f1e093242bb2',
          defaultCc: '11e608a442a5f1e092242dda',
          emailReplyTo: 'email@domain.com',
          fax: '3339998822',
          locationApiId: 'location-111111',
          locationApiKey: 'AE34BBCAADF4AE34BBCAADF4',
          locationC1: 'custom 1',
          locationC2: 'custom 2',
          locationC3: 'custom data 3',
          name: 'Sample Company Headquarters',
          officePhone: '2481234567',
          officeExtPhone: '1021021209',
          tz: 'America/New_York',
          parentId: '11e95f8ec39de8fbdb0a4f1a',
          showContactNotes: true,
          showContactFiles: true,
          createdUserId: '11e95f8ec39de8fbdb0a4f1a',
          locationType: LocationTypeEnum.Merchant,
          ticketHashKey: 'A5F443CADF4AE34BBCAADF4',
        },
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });
});
