/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  OrderEnum,
  ResponseUserVerification,
  ResponseUserVerificationsCollection,
  Type118Enum,
  Type119Enum,
  Type2Enum,
  Type3Enum,
  Type4Enum,
  UserVerificationsController,
} from '../src';
import { testClient } from './testClient';
import {
  expectHeadersToMatch,
  expectMatchingWithOptions,
  makeApiCall,
} from './testHelper';

describe('UserVerificationsController', () => {
  let controller : UserVerificationsController;

  beforeAll(() => {
    controller = new UserVerificationsController(testClient);
  });

  it('should Test Get user verification', async () => {
    const userVerificationId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.getUserVerification(userVerificationId)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseUserVerification = {
      type: Type118Enum.UserVerification,
      data: {
        id: '11e95f8ec39de8fbdb0a4f1a',
        userId: '11e95f8ec39de8fbdb0a4f1a',
        hash: '123456781234567812345678',
        createdTs: 1422040992,
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test List user verifications', async () => {
    const response = await makeApiCall(
      () => controller.listUserVerifications(
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      )
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseUserVerificationsCollection = {
      type: Type119Enum.UserVerificationsCollection,
      list: [
        {
          id: '11e95f8ec39de8fbdb0a4f1a',
          userId: '11e95f8ec39de8fbdb0a4f1a',
          hash: '123456781234567812345678',
          createdTs: 1422040992,
        }
      ],
      links: {
        type: Type2Enum.Links,
        first: '/v1/endpoint?page[size]=10&page[number]=1',
        previous: '/v1/endpoint?page[size]=10&page[number]=5',
        next: '/v1/endpoint?page[size]=10&page[number]=7',
        last: '/v1/endpoint?page[size]=10&page[number]=42',
      },
      pagination: {
        type: Type3Enum.Pagination,
        totalCount: 423,
        pageCount: 42,
        pageNumber: 6,
        pageSize: 10,
      },
      sort: {
        type: Type4Enum.Sorting,
        fields: [
          {
            field: 'last_name',
            order: OrderEnum.Asc,
          }
        ],
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });
});
