/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  DebitCreditEnum,
  Level3DataController,
  ResponseTransactionLevel3,
  TaxExemptEnum,
  Type111Enum,
} from '../src';
import { testClient } from './testClient';
import {
  expectHeadersToMatch,
  expectMatchingWithOptions,
  makeApiCall,
} from './testHelper';

describe('Level3DataController', () => {
  let controller : Level3DataController;

  beforeAll(() => {
    controller = new Level3DataController(testClient);
  });

  it('should Test Delete a single level3 record', async () => {
    const transactionId = '11e95f8ec39de8fbdb0a4f1a';

    const level3Id = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.deleteASingleLevel3Record(transactionId, level3Id)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseTransactionLevel3 = {
      type: Type111Enum.TransactionLevel3,
      data: {
        id: '11e95f8ec39de8fbdb0a4f1a',
        transactionId: '11e95f8ec39de8fbdb0a4f1a',
        level3Data: {
          destinationCountryCode: '840',
          dutyAmount: 0,
          freightAmount: 0,
          nationalTax: 2,
          salesTax: 200,
          shipfromZipCode: 'AZ1234',
          shiptoZipCode: 'FL1234',
          taxAmount: 10,
          taxExempt: TaxExemptEnum.Enum0,
          customerVatRegistration: '12345678',
          merchantVatRegistration: '123456',
          orderDate: '171006',
          summaryCommodityCode: 'C1K2',
          taxRate: 0,
          uniqueVatRefNumber: 'vat1234',
          lineItems: [
            {
              description: 'cool drink',
              commodityCode: 'cc123456',
              discountAmount: 0,
              otherTaxAmount: 0,
              productCode: 'fanta123456',
              quantity: 12,
              taxAmount: 4,
              taxRate: 0,
              unitCode: 'gll',
              unitCost: 3,
              alternateTaxId: '1234',
              debitCredit: DebitCreditEnum.C,
              discountRate: 11,
              taxTypeApplied: '22',
              taxTypeId: '11',
            }
          ],
        },
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test View single level3 record', async () => {
    const transactionId = '11e95f8ec39de8fbdb0a4f1a';

    const level3Id = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.viewSingleLevel3Record(transactionId, level3Id)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseTransactionLevel3 = {
      type: Type111Enum.TransactionLevel3,
      data: {
        id: '11e95f8ec39de8fbdb0a4f1a',
        transactionId: '11e95f8ec39de8fbdb0a4f1a',
        level3Data: {
          destinationCountryCode: '840',
          dutyAmount: 0,
          freightAmount: 0,
          nationalTax: 2,
          salesTax: 200,
          shipfromZipCode: 'AZ1234',
          shiptoZipCode: 'FL1234',
          taxAmount: 10,
          taxExempt: TaxExemptEnum.Enum0,
          customerVatRegistration: '12345678',
          merchantVatRegistration: '123456',
          orderDate: '171006',
          summaryCommodityCode: 'C1K2',
          taxRate: 0,
          uniqueVatRefNumber: 'vat1234',
          lineItems: [
            {
              description: 'cool drink',
              commodityCode: 'cc123456',
              discountAmount: 0,
              otherTaxAmount: 0,
              productCode: 'fanta123456',
              quantity: 12,
              taxAmount: 4,
              taxRate: 0,
              unitCode: 'gll',
              unitCost: 3,
              alternateTaxId: '1234',
              debitCredit: DebitCreditEnum.C,
              discountRate: 11,
              taxTypeApplied: '22',
              taxTypeId: '11',
            }
          ],
        },
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });
});
