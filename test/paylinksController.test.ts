/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  DeliveryMethodEnum,
  OrderEnum,
  PaylinksController,
  ResponsePaylink,
  ResponsePaylinksCollection,
  StatusCode12Enum,
  Type2Enum,
  Type3Enum,
  Type48Enum,
  Type49Enum,
  Type4Enum,
} from '../src';
import { testClient } from './testClient';
import {
  expectHeadersToMatch,
  expectMatchingWithOptions,
  makeApiCall,
} from './testHelper';

describe('PaylinksController', () => {
  let controller : PaylinksController;

  beforeAll(() => {
    controller = new PaylinksController(testClient);
  });

  it('should Test List all Paylinks', async () => {
    const response = await makeApiCall(
      () => controller.listAllPaylinks(
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      )
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponsePaylinksCollection = {
      type: Type49Enum.PaylinksCollection,
      list: [
        {
          locationId: '11e95f8ec39de8fbdb0a4f1a',
          ccProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
          email: 'email@domain.com',
          amountDue: 1,
          contactId: '11e95f8ec39de8fbdb0a4f1a',
          achProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
          expireDate: '2021-12-01',
          displayProductTransactionReceiptDetails: true,
          displayBillingFields: true,
          deliveryMethod: DeliveryMethodEnum.Enum0,
          cellPhone: '3339998822',
          description: 'Description',
          storeToken: false,
          storeTokenTitle: 'John Account',
          bankFundedOnlyOverride: false,
          tags: [
            'Tag 1'
          ],
          redirectUrlDelay: 15,
          redirectUrlOnApprove: 'redirect_url_on_approve0',
          redirectUrlOnDecline: 'redirect_url_on_decline4',
          id: '11e95f8ec39de8fbdb0a4f1a',
          statusId: true,
          statusCode: StatusCode12Enum.Enum1,
          active: true,
          createdTs: 1422040992,
          modifiedTs: 1422040992,
          createdUserId: '11e95f8ec39de8fbdb0a4f1a',
          modifiedUserId: '11e95f8ec39de8fbdb0a4f1a',
        }
      ],
      links: {
        type: Type2Enum.Links,
        first: '/v1/endpoint?page[size]=10&page[number]=1',
        previous: '/v1/endpoint?page[size]=10&page[number]=5',
        next: '/v1/endpoint?page[size]=10&page[number]=7',
        last: '/v1/endpoint?page[size]=10&page[number]=42',
      },
      pagination: {
        type: Type3Enum.Pagination,
        totalCount: 423,
        pageCount: 42,
        pageNumber: 6,
        pageSize: 10,
      },
      sort: {
        type: Type4Enum.Sorting,
        fields: [
          {
            field: 'last_name',
            order: OrderEnum.Asc,
          }
        ],
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test Delete Paylink', async () => {
    const paylinkId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.deletePaylink(paylinkId)
    );

    expect(response.statusCode).toBe(204);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponsePaylink = {
      type: Type48Enum.Paylink,
      data: {
        locationId: '11e95f8ec39de8fbdb0a4f1a',
        ccProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
        email: 'email@domain.com',
        amountDue: 1,
        contactId: '11e95f8ec39de8fbdb0a4f1a',
        achProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
        expireDate: '2021-12-01',
        displayProductTransactionReceiptDetails: true,
        displayBillingFields: true,
        deliveryMethod: DeliveryMethodEnum.Enum0,
        cellPhone: '3339998822',
        description: 'Description',
        storeToken: false,
        storeTokenTitle: 'John Account',
        bankFundedOnlyOverride: false,
        tags: [
          'Tag 1'
        ],
        redirectUrlDelay: 15,
        redirectUrlOnApprove: 'redirect_url_on_approve0',
        redirectUrlOnDecline: 'redirect_url_on_decline4',
        id: '11e95f8ec39de8fbdb0a4f1a',
        statusId: true,
        statusCode: StatusCode12Enum.Enum1,
        active: true,
        createdTs: 1422040992,
        modifiedTs: 1422040992,
        createdUserId: '11e95f8ec39de8fbdb0a4f1a',
        modifiedUserId: '11e95f8ec39de8fbdb0a4f1a',
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test View Single Paylink', async () => {
    const paylinkId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.viewSinglePaylink(paylinkId, undefined, undefined)
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponsePaylink = {
      type: Type48Enum.Paylink,
      data: {
        locationId: '11e95f8ec39de8fbdb0a4f1a',
        ccProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
        email: 'email@domain.com',
        amountDue: 1,
        contactId: '11e95f8ec39de8fbdb0a4f1a',
        achProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
        expireDate: '2021-12-01',
        displayProductTransactionReceiptDetails: true,
        displayBillingFields: true,
        deliveryMethod: DeliveryMethodEnum.Enum0,
        cellPhone: '3339998822',
        description: 'Description',
        storeToken: false,
        storeTokenTitle: 'John Account',
        bankFundedOnlyOverride: false,
        tags: [
          'Tag 1'
        ],
        redirectUrlDelay: 15,
        redirectUrlOnApprove: 'redirect_url_on_approve0',
        redirectUrlOnDecline: 'redirect_url_on_decline4',
        id: '11e95f8ec39de8fbdb0a4f1a',
        statusId: true,
        statusCode: StatusCode12Enum.Enum1,
        active: true,
        createdTs: 1422040992,
        modifiedTs: 1422040992,
        createdUserId: '11e95f8ec39de8fbdb0a4f1a',
        modifiedUserId: '11e95f8ec39de8fbdb0a4f1a',
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test Resend Paylink', async () => {
    const paylinkId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.resendPaylink(
        paylinkId,
        undefined,
        undefined,
        undefined
      )
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponsePaylink = {
      type: Type48Enum.Paylink,
      data: {
        locationId: '11e95f8ec39de8fbdb0a4f1a',
        ccProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
        email: 'email@domain.com',
        amountDue: 1,
        contactId: '11e95f8ec39de8fbdb0a4f1a',
        achProductTransactionId: '11e95f8ec39de8fbdb0a4f1a',
        expireDate: '2021-12-01',
        displayProductTransactionReceiptDetails: true,
        displayBillingFields: true,
        deliveryMethod: DeliveryMethodEnum.Enum0,
        cellPhone: '3339998822',
        description: 'Description',
        storeToken: false,
        storeTokenTitle: 'John Account',
        bankFundedOnlyOverride: false,
        tags: [
          'Tag 1'
        ],
        redirectUrlDelay: 15,
        redirectUrlOnApprove: 'redirect_url_on_approve0',
        redirectUrlOnDecline: 'redirect_url_on_decline4',
        id: '11e95f8ec39de8fbdb0a4f1a',
        statusId: true,
        statusCode: StatusCode12Enum.Enum1,
        active: true,
        createdTs: 1422040992,
        modifiedTs: 1422040992,
        createdUserId: '11e95f8ec39de8fbdb0a4f1a',
        modifiedUserId: '11e95f8ec39de8fbdb0a4f1a',
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });
});
