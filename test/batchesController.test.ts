/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  BatchesController,
  CauSubscribeTypeCodeEnum,
  CauSubscribeTypeIdEnum,
  DebitCreditEnum,
  OrderEnum,
  PartnerEnum,
  PaymentMethodEnum,
  ProcessorEnum,
  ResponseBatchsCollection,
  ResponseTransactionProcessing,
  TaxExemptEnum,
  TaxSurchargeConfigEnum,
  Type1Enum,
  Type2Enum,
  Type3Enum,
  Type4Enum,
  Type5Enum,
} from '../src';
import { testClient } from './testClient';
import {
  expectHeadersToMatch,
  expectMatchingWithOptions,
  makeApiCall,
} from './testHelper';

describe('BatchesController', () => {
  let controller : BatchesController;

  beforeAll(() => {
    controller = new BatchesController(testClient);
  });

  it('should Test List All Batches', async () => {
    const response = await makeApiCall(
      () => controller.listAllBatches(
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      )
    );

    expect(response.statusCode).toBe(200);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseBatchsCollection = {
      type: Type1Enum.BatchsCollection,
      list: [
        {
          id: '11e95f8ec39de8fbdb0a4f1a',
          createdTs: 1422040992,
          productTransactionId: '11e95f8ec39de8fbdb0a4f1a',
          processingStatusId: 2,
          batchNum: 4,
          isOpen: 0,
          settlementFileName: 'settement_file.txt',
          batchCloseTs: 1531423693,
          batchCloseDetail: 'BATCH_MISMATCH',
          totalSaleAmount: 2342,
          totalSaleCount: 21,
          totalRefundAmount: 2342,
          totalRefundCount: 18,
          totalVoidAmount: 2342,
          totalVoidCount: 17,
          totalBlindRefundAmount: 2342,
          totalBlindRefundCount: 16,
          changelogs: [
            {
              id: '11e95f8ec39de8fbdb0a4f1a',
              createdTs: 1422040992,
              action: 'CREATE',
              model: 'TransactionRequest',
              modelId: '11ec829598f0d4008be9aba4',
              userId: '11e95f8ec39de8fbdb0a4f1a',
              changelogDetails: [
                {
                  id: '11e95f8ec39de8fbdb0a4f1a',
                  changelogId: '11e95f8ec39de8fbdb0a4f1a',
                  field: 'next_run_ts',
                  oldValue: '1643616000',
                }
              ],
              user: {
                id: '11e95f8ec39de8fbdb0a4f1a',
                username: 'email@domain.com',
                firstName: 'Bob',
                lastName: 'Fairview',
              },
            }
          ],
          postbackLogs: [
            {
              id: '11e95f8ec39de8fbdb0a4f1a',
              postbackConfigId: '11e95f8ec39de8fbdb0a4f1a',
              changelogId: '11e95f8ec39de8fbdb0a4f1a',
              nextRunTs: 1422040992,
              createdTs: 1422040992,
              modelId: '11e95f8ec39de8fbdb0a4f1a',
            }
          ],
          productTransaction: {
            processorVersion: '1_0_0',
            title: 'My terminal',
            paymentMethod: PaymentMethodEnum.Cc,
            processor: ProcessorEnum.Zgate,
            mcc: '1111',
            taxSurchargeConfig: TaxSurchargeConfigEnum.Enum2,
            partner: PartnerEnum.Standalone,
            locationId: '11e95f8ec39de8fbdb0a4f1a',
            surcharge: {  },
            processorData: {  },
            vtClerkNumber: true,
            vtBillingPhone: true,
            vtEnableTip: true,
            achAllowDebit: true,
            achAllowCredit: true,
            achAllowRefund: true,
            vtCvv: true,
            vtStreet: true,
            vtZip: true,
            vtOrderNum: true,
            vtEnable: true,
            receiptShowContactName: true,
            displayAvs: true,
            cardTypeVisa: true,
            cardTypeMc: true,
            cardTypeDisc: true,
            cardTypeAmex: true,
            cardTypeDiners: true,
            cardTypeJcb: true,
            cardTypeEbt: true,
            allowEbtCashBenefit: true,
            allowEbtFoodStamp: true,
            invoiceLocation: true,
            allowPartialAuthorization: true,
            allowRecurringPartialAuthorization: true,
            autoDeclineCvv: true,
            autoDeclineStreet: true,
            autoDeclineZip: true,
            splitPaymentsAllow: true,
            vtShowCustomFields: true,
            receiptShowCustomFields: true,
            vtOverrideSalesTaxAllowed: true,
            vtEnableSalesTax: true,
            vtRequireZip: true,
            vtRequireStreet: true,
            autoDeclineCavv: true,
            currentBatch: 34,
            dupCheckPerBatch: 'dup_check_per_batch8',
            paylinkAllow: false,
            quickInvoiceAllow: false,
            level3Allow: false,
            payfacEnable: false,
            enable3ds: false,
            salesOfficeId: '11e95f8ec39de8fbdb0a4f1a',
            hostedPaymentPageAllow: false,
            surchargeId: '11e95f8ec39de8fbdb0a4f1a',
            allowBigCommerce: false,
            level3Default: {
              destinationCountryCode: '840',
              dutyAmount: 0,
              freightAmount: 0,
              nationalTax: 2,
              salesTax: 200,
              shipfromZipCode: 'AZ12345',
              shiptoZipCode: 'MI48335',
              taxAmount: 0,
              taxExempt: TaxExemptEnum.Enum0,
              customerVatRegistration: '12345678',
              merchantVatRegistration: '123456',
              orderDate: '171006',
              summaryCommodityCode: 'C1K2',
              taxRate: 0,
              uniqueVatRefNumber: 'vat1234',
              lineItems: [
                {
                  alternateTaxId: '1234',
                  debitCredit: DebitCreditEnum.C,
                  description: 'cool drink',
                  discountAmount: 10,
                  discountRate: 11,
                  productCode: 'coke12345678',
                  quantity: 5,
                  taxAmount: 3,
                  taxRate: 0,
                  taxTypeApplied: '22',
                  taxTypeId: 'a1',
                  unitCode: 'gll',
                  unitCost: 10,
                  commodityCode: 'cc123456',
                  otherTaxAmount: 0,
                }
              ],
            },
            cauSubscribeTypeId: CauSubscribeTypeIdEnum.Enum0,
            locationBillingAccountId: '11eb88b873980c64a21e5fd2',
            productBillingGroupId: 'nofees',
            accountNumber: '12345678',
            runAvsOnAccountvaultCreate: false,
            accountvaultExpireNotificationEmailEnable: false,
            debitAllowVoid: false,
            quickInvoiceTextToPay: false,
            smsEnable: false,
            vtShowCurrency: true,
            receiptShowCurrency: false,
            allowBlindRefund: false,
            vtShowCompanyName: false,
            receiptShowCompanyName: false,
            bankFundedOnly: false,
            requireCvvOnKeyedCnp: true,
            requireCvvOnTokenizedCnp: true,
            showSecondaryAmount: false,
            allowSecondaryAmount: false,
            showGooglePay: true,
            showApplePay: true,
            batchRiskConfig: {
            },
            currencyCode: 840,
            enableAchValidation: false,
            enableAchRetry: false,
            id: '11e95f8ec39de8fbdb0a4f1a',
            active: true,
            createdTs: 1422040992,
            modifiedTs: 1422040992,
            createdUserId: '11e95f8ec39de8fbdb0a4f1a',
            modifiedUserId: '11e95f8ec39de8fbdb0a4f1a',
            productTransactionApiId: '11e95f8ec39de8fbdb0a4f1a',
            isSecondaryAmountAllowed: false,
            fortisId: '8149742',
            productBillingGroupCode: 'nofees',
            cauSubscribeTypeCode: CauSubscribeTypeCodeEnum.Enum0,
          },
        }
      ],
      links: {
        type: Type2Enum.Links,
        first: '/v1/endpoint?page[size]=10&page[number]=1',
        previous: '/v1/endpoint?page[size]=10&page[number]=5',
        next: '/v1/endpoint?page[size]=10&page[number]=7',
        last: '/v1/endpoint?page[size]=10&page[number]=42',
      },
      pagination: {
        type: Type3Enum.Pagination,
        totalCount: 423,
        pageCount: 42,
        pageNumber: 6,
        pageSize: 10,
      },
      sort: {
        type: Type4Enum.Sorting,
        fields: [
          {
            field: 'last_name',
            order: OrderEnum.Asc,
          }
        ],
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });

  it('should Test Settle a Batch', async () => {
    const batchId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.settleABatch(batchId)
    );

    expect(response.statusCode).toBe(202);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseTransactionProcessing = {
      type: Type5Enum.TransactionProcessing,
      data: {
        async: {
          code: '406c66c3-21cb-47fb-80fc-843bc42507fb',
          link: '/v1/async/status/406c66c3-21cb-47fb-80fc-843bc42507fb',
        },
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });
});
