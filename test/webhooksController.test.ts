/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  FormatEnum,
  Resource12Enum,
  ResponseWebhook,
  Type133Enum,
  WebhooksController,
} from '../src';
import { testClient } from './testClient';
import {
  expectHeadersToMatch,
  expectMatchingWithOptions,
  makeApiCall,
} from './testHelper';

describe('WebhooksController', () => {
  let controller : WebhooksController;

  beforeAll(() => {
    controller = new WebhooksController(testClient);
  });

  it('should Test Delete a postback config', async () => {
    const webhookId = '11e95f8ec39de8fbdb0a4f1a';

    const response = await makeApiCall(
      () => controller.deleteAPostbackConfig(webhookId)
    );

    expect(response.statusCode).toBe(204);

    const expectedHeaders = { 'Content-Type': ['application/json', true] };

    expectHeadersToMatch(response.headers, expectedHeaders);

    const expected: ResponseWebhook = {
      type: Type133Enum.Webhook,
      data: {
        attemptInterval: 300,
        basicAuthUsername: 'username',
        basicAuthPassword: 'password',
        expands: 'changelogs,tags',
        format: FormatEnum.Apidefault,
        isActive: true,
        locationId: '11e95f8ec39de8fbdb0a4f1a',
        onCreate: true,
        onUpdate: true,
        onDelete: true,
        legacy: true,
        postbackConfigId: '11e95f8ec39de8fbdb0a4f1a',
        productTransactionId: '11e95f8ec39de8fbdb0a4f1a',
        resource: Resource12Enum.Contact,
        numberOfAttempts: 1,
        url: 'https://127.0.0.1/receiver',
        id: '11e95f8ec39de8fbdb0a4f1a',
        postbackLogs: [
          {
            id: '11e95f8ec39de8fbdb0a4f1a',
            postbackConfigId: '11e95f8ec39de8fbdb0a4f1a',
            changelogId: '11e95f8ec39de8fbdb0a4f1a',
            nextRunTs: 1422040992,
            createdTs: 1422040992,
            modelId: '11e95f8ec39de8fbdb0a4f1a',
          }
        ],
      },
    };

    expect(response.result).not.toBeNull();
    expectMatchingWithOptions(
      expected,
      response.result,
      { allowExtra: true, isOrdered: false, checkValues: false }
    );
  });
});
