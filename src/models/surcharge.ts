/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  expandoObject,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';

/** Surcharge Information on `expand` */
export interface Surcharge {
  /** Surcharge Fee */
  surchargeFee?: number;
  /** Surcharge Rate */
  surchargeRate?: number;
  /** Max Transaction Amount */
  maxTransactionAmount?: number | null;
  /** Min Fee Amount */
  minFeeAmount?: number | null;
  /** Max Fee Amount */
  maxFeeAmount?: number | null;
  /** Surcharge On Recurring */
  surchargeOnRecurring?: boolean;
  /** Refund Surcharges */
  refundSurcharges?: boolean;
  /** Product Transaction Id */
  productTransactionId?: string;
  /** Run As Separate Transaction */
  runAsSeparateTransaction?: boolean;
  /** Apply To User Type Id */
  applyToUserTypeId?: string | null;
  /** Title */
  title?: string | null;
  /** Surcharge Label */
  surchargeLabel?: string | null;
  /** Surcharge Transaction Product Id */
  surchargeTransactionProductId?: string | null;
  /** State Exception Check */
  stateExceptionCheck?: boolean;
  /** Compliant */
  compliant?: boolean;
  /** Surcharge Id */
  id?: string;
  /** User ID Created the register */
  createdUserId?: string;
  /** Last User ID that updated the register */
  modifiedUserId?: string;
  /** Created Time Stamp */
  createdTs?: number;
  /** Modified Time Stamp */
  modifiedTs?: number;
  [key: string]: unknown;
}

export const surchargeSchema: Schema<Surcharge> = expandoObject({
  surchargeFee: ['surcharge_fee', optional(number())],
  surchargeRate: ['surcharge_rate', optional(number())],
  maxTransactionAmount: [
    'max_transaction_amount',
    optional(nullable(number())),
  ],
  minFeeAmount: ['min_fee_amount', optional(nullable(number()))],
  maxFeeAmount: ['max_fee_amount', optional(nullable(number()))],
  surchargeOnRecurring: ['surcharge_on_recurring', optional(boolean())],
  refundSurcharges: ['refund_surcharges', optional(boolean())],
  productTransactionId: ['product_transaction_id', optional(string())],
  runAsSeparateTransaction: [
    'run_as_separate_transaction',
    optional(boolean()),
  ],
  applyToUserTypeId: ['apply_to_user_type_id', optional(nullable(string()))],
  title: ['title', optional(nullable(string()))],
  surchargeLabel: ['surcharge_label', optional(nullable(string()))],
  surchargeTransactionProductId: [
    'surcharge_transaction_product_id',
    optional(nullable(string())),
  ],
  stateExceptionCheck: ['state_exception_check', optional(boolean())],
  compliant: ['compliant', optional(boolean())],
  id: ['id', optional(string())],
  createdUserId: ['created_user_id', optional(string())],
  modifiedUserId: ['modified_user_id', optional(string())],
  createdTs: ['created_ts', optional(number())],
  modifiedTs: ['modified_ts', optional(number())],
});
