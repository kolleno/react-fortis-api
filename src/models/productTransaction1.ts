/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { BatchRiskConfig, batchRiskConfigSchema } from './batchRiskConfig';
import {
  CauSubscribeTypeCodeEnum,
  cauSubscribeTypeCodeEnumSchema,
} from './cauSubscribeTypeCodeEnum';
import {
  CauSubscribeTypeIdEnum,
  cauSubscribeTypeIdEnumSchema,
} from './cauSubscribeTypeIdEnum';
import {
  DefaultTransactionTypeEnum,
  defaultTransactionTypeEnumSchema,
} from './defaultTransactionTypeEnum';
import { IndustryTypeEnum, industryTypeEnumSchema } from './industryTypeEnum';
import { Level3Default, level3DefaultSchema } from './level3Default';
import { PartnerEnum, partnerEnumSchema } from './partnerEnum';
import {
  PaymentMethodEnum,
  paymentMethodEnumSchema,
} from './paymentMethodEnum';
import { ProcessorEnum, processorEnumSchema } from './processorEnum';
import {
  TaxSurchargeConfigEnum,
  taxSurchargeConfigEnumSchema,
} from './taxSurchargeConfigEnum';

export interface ProductTransaction1 {
  /** Processor Version */
  processorVersion?: string | null;
  /** Industry Type */
  industryType?: IndustryTypeEnum | null;
  /** Title */
  title?: string;
  /** Payment method */
  paymentMethod?: PaymentMethodEnum;
  /** Processor */
  processor?: ProcessorEnum | null;
  /** MCC */
  mcc?: string | null;
  /** Tax Surcharge Config */
  taxSurchargeConfig?: TaxSurchargeConfigEnum | null;
  /** Terminal ID */
  terminalId?: string | null;
  /** Partner */
  partner?: PartnerEnum | null;
  /** Product Ach Pv Store ID */
  productAchPvStoreId?: string | null;
  /** Invoice Adjustment Title */
  invoiceAdjustmentTitle?: string | null;
  /** Location ID */
  locationId?: string;
  /** Location Api ID */
  locationApiId?: string | null;
  /** Billing Location API ID */
  billingLocationApiId?: string | null;
  /** Portfolio ID */
  portfolioId?: string | null;
  /** Product Validation Rule */
  portfolioValidationRule?: string | null;
  /** Sub Processor */
  subProcessor?: string | null;
  /** Surcharge */
  surcharge?: unknown;
  processorData?: unknown;
  /** Vt Clerk Number */
  vtClerkNumber?: boolean;
  /** Card Type JCB */
  vtBillingPhone?: boolean;
  /** VT Enable Tip */
  vtEnableTip?: boolean;
  /** Ach Allow Debit */
  achAllowDebit?: boolean;
  /** Ach Allow Credit */
  achAllowCredit?: boolean;
  /** Ach Allow Refund */
  achAllowRefund?: boolean;
  /** VT CVV */
  vtCvv?: boolean;
  /** VT Street */
  vtStreet?: boolean;
  /** VT Zip */
  vtZip?: boolean;
  /** VT Order Num */
  vtOrderNum?: boolean;
  /** VT Enable */
  vtEnable?: boolean;
  /** Receipt Show Contact Name */
  receiptShowContactName?: boolean;
  /** Display Avs */
  displayAvs?: boolean;
  /** Card Type Visa */
  cardTypeVisa?: boolean;
  /** Card Type Mc */
  cardTypeMc?: boolean;
  /** Card Type Disc */
  cardTypeDisc?: boolean;
  /** Card Type Amex */
  cardTypeAmex?: boolean;
  /** Card Type Dinners */
  cardTypeDiners?: boolean;
  cardTypeJcb?: boolean;
  /** Card Type EBT */
  cardTypeEbt?: boolean;
  /** Allow EBT Cash Benefit */
  allowEbtCashBenefit?: boolean;
  /** Allow EBT Food Stamp */
  allowEbtFoodStamp?: boolean;
  /** Invoice Location */
  invoiceLocation?: boolean;
  /** Allow Partial Authorization */
  allowPartialAuthorization?: boolean;
  /** Allow Recurring Partial Authorization */
  allowRecurringPartialAuthorization?: boolean;
  /** Auto Decline Cvv */
  autoDeclineCvv?: boolean;
  /** Auto Decline Street */
  autoDeclineStreet?: boolean;
  /** Auto Decline ZIP */
  autoDeclineZip?: boolean;
  /** Split Payments Allow */
  splitPaymentsAllow?: boolean;
  /** Vt Show Custom Fields */
  vtShowCustomFields?: boolean;
  /** Receipt Show Custom Fields */
  receiptShowCustomFields?: boolean;
  /** Vt Override Sales Tax Allowed */
  vtOverrideSalesTaxAllowed?: boolean;
  /** Vt Enable Sales Tax */
  vtEnableSalesTax?: boolean;
  /** Vt Require ZIP */
  vtRequireZip?: boolean;
  /** Vt Require Street */
  vtRequireStreet?: boolean;
  /** Auto Decline Cavv */
  autoDeclineCavv?: boolean;
  /** Merchant ID */
  merchantId?: string | null;
  /** Receipt Header */
  receiptHeader?: string | null;
  /** Receipt Footer */
  receiptFooter?: string | null;
  /** Receipt Add Account Above Signature */
  receiptAddAccountAboveSignature?: string | null;
  /** Receipt Add Recurring Above Signature */
  receiptAddRecurringAboveSignature?: string | null;
  /** Receipt VT Above Signature */
  receiptVtAboveSignature?: string | null;
  /** Default Transaction Type */
  defaultTransactionType?: DefaultTransactionTypeEnum | null;
  /** Username */
  username?: string | null;
  /** Passowrd */
  password?: string | null;
  /** Current Batch */
  currentBatch?: number | null;
  /** Dup Check Per Batch */
  dupCheckPerBatch?: string | null;
  /** Agent Code */
  agentCode?: string | null;
  /** Paylink Allow */
  paylinkAllow?: boolean;
  /** Quick Invoice Allow */
  quickInvoiceAllow?: boolean;
  /** Level3 Allow */
  level3Allow?: boolean;
  /** Payfac Enable */
  payfacEnable?: boolean;
  /** Enable 3DS */
  enable3ds?: boolean;
  /** Sales Office ID */
  salesOfficeId?: string | null;
  /** Hosted Payment Page Max Allowed */
  hostedPaymentPageMaxAllowed?: number | null;
  /** Hosted Payment Page Allow */
  hostedPaymentPageAllow?: boolean;
  /** Surcharge ID */
  surchargeId?: string | null;
  /** Allow Big Commerce */
  allowBigCommerce?: boolean;
  /** Level3 Default */
  level3Default?: Level3Default;
  /** Cau Subscribe Type ID */
  cauSubscribeTypeId?: CauSubscribeTypeIdEnum | null;
  /** Cau Account Number */
  cauAccountNumber?: string | null;
  /** Location Billing Account ID */
  locationBillingAccountId?: string | null;
  /** Product Billing Group ID */
  productBillingGroupId?: string | null;
  /** Account number */
  accountNumber?: string | null;
  /** Run Avs On Accountvault Create */
  runAvsOnAccountvaultCreate?: boolean;
  /** Accountvault Expire Notification Email Enable */
  accountvaultExpireNotificationEmailEnable?: boolean;
  /** Debit Allow Void */
  debitAllowVoid?: boolean;
  /** Quick Invoice Text To Pay */
  quickInvoiceTextToPay?: boolean;
  /** Authentication Code */
  authenticationCode?: string | null;
  /** SMS Enable */
  smsEnable?: boolean;
  /** Vt Show Currency */
  vtShowCurrency?: boolean;
  /** Receipt Show Currency */
  receiptShowCurrency?: boolean;
  /** Allow Blind Refund */
  allowBlindRefund?: boolean;
  /** Vt Show Company Name */
  vtShowCompanyName?: boolean;
  /** Receipt Show Company Name */
  receiptShowCompanyName?: boolean;
  /** Bank Funded Only */
  bankFundedOnly?: boolean;
  /** Require CVV on keyed CNP */
  requireCvvOnKeyedCnp?: boolean;
  /** Require CVV on tokenized CNP */
  requireCvvOnTokenizedCnp?: boolean;
  /** Show Retained Amount */
  showSecondaryAmount?: boolean;
  /** Allow Retained Amount */
  allowSecondaryAmount?: boolean;
  /** Vt Require Street */
  showGooglePay?: boolean;
  /** Vt Require Street */
  showApplePay?: boolean;
  /** Batch Risk Config */
  batchRiskConfig?: BatchRiskConfig;
  /** Currency Code */
  currencyCode?: number | null;
  /** Enable ACH Validation */
  enableAchValidation?: boolean;
  /** Enable ACH Retry */
  enableAchRetry?: boolean;
  /** User Reports ID */
  id?: string;
  /** Receipt Logo */
  receiptLogo?: string;
  /** Active */
  active?: boolean;
  /** TZ */
  tz?: string | null;
  /** Current Stan */
  currentStan?: number | null;
  /** Created Time Stamp */
  createdTs?: number | null;
  /** Modified Time Stamp */
  modifiedTs?: number | null;
  /** User ID Created the register */
  createdUserId?: string | null;
  /** Last User ID that updated the register */
  modifiedUserId?: string | null;
  /** Product Transaction API ID */
  productTransactionApiId?: string | null;
  /** Transaction Amount Notification Treshold */
  transactionAmountNotificationThreshold?: number;
  /** Allow Retained Amount */
  isSecondaryAmountAllowed?: boolean;
  fortisId?: string | null;
  /** Product Billing Group Code */
  productBillingGroupCode?: string | null;
  /** Cau Subscribe Type Code */
  cauSubscribeTypeCode?: CauSubscribeTypeCodeEnum | null;
  /** Merchant Code */
  merchantCode?: string | null;
  [key: string]: unknown;
}

export const productTransaction1Schema: Schema<ProductTransaction1> = expandoObject(
  {
    processorVersion: ['processor_version', optional(nullable(string()))],
    industryType: ['industry_type', optional(nullable(industryTypeEnumSchema))],
    title: ['title', optional(string())],
    paymentMethod: ['payment_method', optional(paymentMethodEnumSchema)],
    processor: ['processor', optional(nullable(processorEnumSchema))],
    mcc: ['mcc', optional(nullable(string()))],
    taxSurchargeConfig: [
      'tax_surcharge_config',
      optional(nullable(taxSurchargeConfigEnumSchema)),
    ],
    terminalId: ['terminal_id', optional(nullable(string()))],
    partner: ['partner', optional(nullable(partnerEnumSchema))],
    productAchPvStoreId: [
      'product_ach_pv_store_id',
      optional(nullable(string())),
    ],
    invoiceAdjustmentTitle: [
      'invoice_adjustment_title',
      optional(nullable(string())),
    ],
    locationId: ['location_id', optional(string())],
    locationApiId: ['location_api_id', optional(nullable(string()))],
    billingLocationApiId: [
      'billing_location_api_id',
      optional(nullable(string())),
    ],
    portfolioId: ['portfolio_id', optional(nullable(string()))],
    portfolioValidationRule: [
      'portfolioValidationRule',
      optional(nullable(string())),
    ],
    subProcessor: ['sub_processor', optional(nullable(string()))],
    surcharge: ['surcharge', optional(unknown())],
    processorData: ['processor_data', optional(unknown())],
    vtClerkNumber: ['vt_clerk_number', optional(boolean())],
    vtBillingPhone: ['vt_billing_phone', optional(boolean())],
    vtEnableTip: ['vt_enable_tip', optional(boolean())],
    achAllowDebit: ['ach_allow_debit', optional(boolean())],
    achAllowCredit: ['ach_allow_credit', optional(boolean())],
    achAllowRefund: ['ach_allow_refund', optional(boolean())],
    vtCvv: ['vt_cvv', optional(boolean())],
    vtStreet: ['vt_street', optional(boolean())],
    vtZip: ['vt_zip', optional(boolean())],
    vtOrderNum: ['vt_order_num', optional(boolean())],
    vtEnable: ['vt_enable', optional(boolean())],
    receiptShowContactName: ['receipt_show_contact_name', optional(boolean())],
    displayAvs: ['display_avs', optional(boolean())],
    cardTypeVisa: ['card_type_visa', optional(boolean())],
    cardTypeMc: ['card_type_mc', optional(boolean())],
    cardTypeDisc: ['card_type_disc', optional(boolean())],
    cardTypeAmex: ['card_type_amex', optional(boolean())],
    cardTypeDiners: ['card_type_diners', optional(boolean())],
    cardTypeJcb: ['card_type_jcb', optional(boolean())],
    cardTypeEbt: ['card_type_ebt', optional(boolean())],
    allowEbtCashBenefit: ['allow_ebt_cash_benefit', optional(boolean())],
    allowEbtFoodStamp: ['allow_ebt_food_stamp', optional(boolean())],
    invoiceLocation: ['invoice_location', optional(boolean())],
    allowPartialAuthorization: [
      'allow_partial_authorization',
      optional(boolean()),
    ],
    allowRecurringPartialAuthorization: [
      'allow_recurring_partial_authorization',
      optional(boolean()),
    ],
    autoDeclineCvv: ['auto_decline_cvv', optional(boolean())],
    autoDeclineStreet: ['auto_decline_street', optional(boolean())],
    autoDeclineZip: ['auto_decline_zip', optional(boolean())],
    splitPaymentsAllow: ['split_payments_allow', optional(boolean())],
    vtShowCustomFields: ['vt_show_custom_fields', optional(boolean())],
    receiptShowCustomFields: [
      'receipt_show_custom_fields',
      optional(boolean()),
    ],
    vtOverrideSalesTaxAllowed: [
      'vt_override_sales_tax_allowed',
      optional(boolean()),
    ],
    vtEnableSalesTax: ['vt_enable_sales_tax', optional(boolean())],
    vtRequireZip: ['vt_require_zip', optional(boolean())],
    vtRequireStreet: ['vt_require_street', optional(boolean())],
    autoDeclineCavv: ['auto_decline_cavv', optional(boolean())],
    merchantId: ['merchant_id', optional(nullable(string()))],
    receiptHeader: ['receipt_header', optional(nullable(string()))],
    receiptFooter: ['receipt_footer', optional(nullable(string()))],
    receiptAddAccountAboveSignature: [
      'receipt_add_account_above_signature',
      optional(nullable(string())),
    ],
    receiptAddRecurringAboveSignature: [
      'receipt_add_recurring_above_signature',
      optional(nullable(string())),
    ],
    receiptVtAboveSignature: [
      'receipt_vt_above_signature',
      optional(nullable(string())),
    ],
    defaultTransactionType: [
      'default_transaction_type',
      optional(nullable(defaultTransactionTypeEnumSchema)),
    ],
    username: ['username', optional(nullable(string()))],
    password: ['password', optional(nullable(string()))],
    currentBatch: ['current_batch', optional(nullable(number()))],
    dupCheckPerBatch: ['dup_check_per_batch', optional(nullable(string()))],
    agentCode: ['agent_code', optional(nullable(string()))],
    paylinkAllow: ['paylink_allow', optional(boolean())],
    quickInvoiceAllow: ['quick_invoice_allow', optional(boolean())],
    level3Allow: ['level3_allow', optional(boolean())],
    payfacEnable: ['payfac_enable', optional(boolean())],
    enable3ds: ['enable_3ds', optional(boolean())],
    salesOfficeId: ['sales_office_id', optional(nullable(string()))],
    hostedPaymentPageMaxAllowed: [
      'hosted_payment_page_max_allowed',
      optional(nullable(number())),
    ],
    hostedPaymentPageAllow: ['hosted_payment_page_allow', optional(boolean())],
    surchargeId: ['surcharge_id', optional(nullable(string()))],
    allowBigCommerce: ['allow_big_commerce', optional(boolean())],
    level3Default: [
      'level3_default',
      optional(lazy(() => level3DefaultSchema)),
    ],
    cauSubscribeTypeId: [
      'cau_subscribe_type_id',
      optional(nullable(cauSubscribeTypeIdEnumSchema)),
    ],
    cauAccountNumber: ['cau_account_number', optional(nullable(string()))],
    locationBillingAccountId: [
      'location_billing_account_id',
      optional(nullable(string())),
    ],
    productBillingGroupId: [
      'product_billing_group_id',
      optional(nullable(string())),
    ],
    accountNumber: ['account_number', optional(nullable(string()))],
    runAvsOnAccountvaultCreate: [
      'run_avs_on_accountvault_create',
      optional(boolean()),
    ],
    accountvaultExpireNotificationEmailEnable: [
      'accountvault_expire_notification_email_enable',
      optional(boolean()),
    ],
    debitAllowVoid: ['debit_allow_void', optional(boolean())],
    quickInvoiceTextToPay: ['quick_invoice_text_to_pay', optional(boolean())],
    authenticationCode: ['authentication_code', optional(nullable(string()))],
    smsEnable: ['sms_enable', optional(boolean())],
    vtShowCurrency: ['vt_show_currency', optional(boolean())],
    receiptShowCurrency: ['receipt_show_currency', optional(boolean())],
    allowBlindRefund: ['allow_blind_refund', optional(boolean())],
    vtShowCompanyName: ['vt_show_company_name', optional(boolean())],
    receiptShowCompanyName: ['receipt_show_company_name', optional(boolean())],
    bankFundedOnly: ['bank_funded_only', optional(boolean())],
    requireCvvOnKeyedCnp: ['require_cvv_on_keyed_cnp', optional(boolean())],
    requireCvvOnTokenizedCnp: [
      'require_cvv_on_tokenized_cnp',
      optional(boolean()),
    ],
    showSecondaryAmount: ['show_secondary_amount', optional(boolean())],
    allowSecondaryAmount: ['allow_secondary_amount', optional(boolean())],
    showGooglePay: ['show_google_pay', optional(boolean())],
    showApplePay: ['show_apple_pay', optional(boolean())],
    batchRiskConfig: [
      'batch_risk_config',
      optional(lazy(() => batchRiskConfigSchema)),
    ],
    currencyCode: ['currency_code', optional(nullable(number()))],
    enableAchValidation: ['enable_ach_validation', optional(boolean())],
    enableAchRetry: ['enable_ach_retry', optional(boolean())],
    id: ['id', optional(string())],
    receiptLogo: ['receipt_logo', optional(string())],
    active: ['active', optional(boolean())],
    tz: ['tz', optional(nullable(string()))],
    currentStan: ['current_stan', optional(nullable(number()))],
    createdTs: ['created_ts', optional(nullable(number()))],
    modifiedTs: ['modified_ts', optional(nullable(number()))],
    createdUserId: ['created_user_id', optional(nullable(string()))],
    modifiedUserId: ['modified_user_id', optional(nullable(string()))],
    productTransactionApiId: [
      'product_transaction_api_id',
      optional(nullable(string())),
    ],
    transactionAmountNotificationThreshold: [
      'transaction_amount_notification_threshold',
      optional(number()),
    ],
    isSecondaryAmountAllowed: [
      'is_secondary_amount_allowed',
      optional(boolean()),
    ],
    fortisId: ['fortis_id', optional(nullable(string()))],
    productBillingGroupCode: [
      'product_billing_group_code',
      optional(nullable(string())),
    ],
    cauSubscribeTypeCode: [
      'cau_subscribe_type_code',
      optional(nullable(cauSubscribeTypeCodeEnumSchema)),
    ],
    merchantCode: ['merchant_code', optional(nullable(string()))],
  }
);
