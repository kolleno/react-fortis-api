/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { expandoObject, nullable, optional, Schema, string } from '../schema';

export interface Data27 {
  /** The Issuer Bank name for the BIN */
  issuerBankName?: string;
  /**
   * VISA - Three character alpha country code
   * MC - Three character alpha country code
   * Maestro - Three character alpha country code
   * Amex - Space Filled
   * Discover - Three character alpha country code or spaces when Discover doesn't share issuer country.
   */
  countryCode?: string;
  /**
   * V - Visa
   * M - MasterCard
   * A - American Express
   * D - Discover
   * N - PIN Only (Non-Visa/MasterCard/AMEX/Discover
   */
  detailCardProduct?: string;
  /** Left justified, Space filled */
  detailCardIndicator?: string;
  /** Left justified, Space filled */
  fsaIndicator?: string;
  /**
   * P = Prepaid Card
   * Default: Space filled
   */
  prepaidIndicator?: string;
  /**
   * P = Prepaid Card
   * Default: Space filled
   */
  productId?: string;
  /**
   * P = Prepaid Card
   * Default: Space filled
   */
  regulatorIndicator?: string;
  /** This is used to identify product sub-types, i.e. further classification of product. */
  visaProductSubType?: string | null;
  /**
   * L = Visa Large Ticket.
   * Default: Space filled
   */
  visaLargeTicketIndicator?: string | null;
  /** For Visa, MasterCard, and Discover.  Identifies the source of the funds associated with the primary account for the card. */
  accountFundSource?: string;
  /** Categorizes the BIN as a Business card, Corporate T&E card, Purchase card or Consumer card. Assists the POS device with prompting decisions â€“ to collect addenda or not.  Visa, MasterCard and Discover only. */
  cardClass?: string | null;
  /**
   * Token Indicator values:
   * Y = Token BIN
   * Default: Space filled
   * VISA, MC, and Discover Only
   */
  tokenInd?: string | null;
  /**
   * For Discover card types
   * 00 - Discover
   * 01 - Diners
   * 02 - JCB (Japanese Credit Bank)
   * 03 - CUP (China Union Pay)
   * 04 PayPal
   */
  issuingNetwork?: string | null;
  [key: string]: unknown;
}

export const data27Schema: Schema<Data27> = expandoObject({
  issuerBankName: ['issuer_bank_name', optional(string())],
  countryCode: ['country_code', optional(string())],
  detailCardProduct: ['detail_card_product', optional(string())],
  detailCardIndicator: ['detail_card_indicator', optional(string())],
  fsaIndicator: ['fsa_indicator', optional(string())],
  prepaidIndicator: ['prepaid_indicator', optional(string())],
  productId: ['product_id', optional(string())],
  regulatorIndicator: ['regulator_indicator', optional(string())],
  visaProductSubType: ['visa_product_sub_type', optional(nullable(string()))],
  visaLargeTicketIndicator: [
    'visa_large_ticket_indicator',
    optional(nullable(string())),
  ],
  accountFundSource: ['account_fund_source', optional(string())],
  cardClass: ['card_class', optional(nullable(string()))],
  tokenInd: ['token_ind', optional(nullable(string()))],
  issuingNetwork: ['issuing_network', optional(nullable(string()))],
});
