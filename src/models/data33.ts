/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import {
  ActiveNotificationAlert,
  activeNotificationAlertSchema,
} from './activeNotificationAlert';
import { Address2, address2Schema } from './address2';
import { AuthRole, authRoleSchema } from './authRole';
import { Changelog, changelogSchema } from './changelog';
import { Contact1, contact1Schema } from './contact1';
import { CreatedUser, createdUserSchema } from './createdUser';
import { Domain, domainSchema } from './domain';
import { EmailBlacklist, emailBlacklistSchema } from './emailBlacklist';
import { Helppage2, helppage2Schema } from './helppage2';
import { Location18, location18Schema } from './location18';
import {
  Locationmarketplace,
  locationmarketplaceSchema,
} from './locationmarketplace';
import { LocationUser, locationUserSchema } from './locationUser';
import { PrimaryLocation, primaryLocationSchema } from './primaryLocation';
import { ReceivedEmail, receivedEmailSchema } from './receivedEmail';
import { Resources, resourcesSchema } from './resources';
import { StatusCodeEnum, statusCodeEnumSchema } from './statusCodeEnum';
import { UiPrefs, uiPrefsSchema } from './uiPrefs';
import { UserTypeCodeEnum, userTypeCodeEnumSchema } from './userTypeCodeEnum';

export interface Data33 {
  /** Account Number */
  accountNumber?: string | null;
  /** Branding Domain Url */
  brandingDomainUrl?: string | null;
  /** Cell Phone */
  cellPhone?: string | null;
  /** Company Name */
  companyName?: string | null;
  /** Contact Id Information on `expand` */
  contactId?: string | null;
  /** Date Of Birth */
  dateOfBirth?: string | null;
  /** Domain */
  domainId?: string | null;
  /** Email */
  email?: string;
  /** Email Trx Receipt */
  emailTrxReceipt?: boolean;
  /** Home Phone */
  homePhone?: string | null;
  /** First Name */
  firstName?: string | null;
  /** Last Name */
  lastName?: string;
  /** Locale */
  locale?: string | null;
  /** Office Phone */
  officePhone?: string | null;
  /** Office Ext Phone */
  officeExtPhone?: string | null;
  /** Primary Location ID */
  primaryLocationId?: string;
  /** Requires New Password */
  requiresNewPassword?: string | null;
  /** Terms Condition (This field is required when updating your own password). */
  termsConditionCode?: string | null;
  /** Time zone */
  tz?: string;
  /** Ui Prefs */
  uiPrefs?: UiPrefs;
  /** Username */
  username?: string;
  /** User Api Key */
  userApiKey?: string | null;
  /** User Hash Key */
  userHashKey?: string | null;
  /** User Type */
  userTypeCode?: UserTypeCodeEnum;
  /** Password */
  password?: string | null;
  /** Zip */
  zip?: string | null;
  /** Location ID */
  locationId?: string | null;
  /** ContactApi Id */
  contactApiId?: string | null;
  /** Primary LocationApi ID */
  primaryLocationApiId?: string | null;
  /** Status Code */
  statusCode?: StatusCodeEnum | null;
  /** API Only */
  apiOnly?: boolean;
  /** Is Invitation */
  isInvitation?: boolean;
  /** Address */
  address?: Address2;
  /** User ID */
  id?: string;
  /** Status */
  status?: boolean;
  /** Login Attempts */
  loginAttempts?: number;
  /** Last Login */
  lastLoginTs?: number;
  /** Created Time Stamp */
  createdTs?: number;
  /** Modified Time Stamp */
  modifiedTs?: number;
  /** Created User */
  createdUserId?: string;
  /** Terms Accepted */
  termsAcceptedTs?: number | null;
  /** Terms Agree Ip */
  termsAgreeIp?: string | null;
  /** Current Date Time */
  currentDateTime?: string;
  /** Current Login Ip */
  currentLoginIp?: string | null;
  /** Current Login Timestamp */
  currentLogin?: number | null;
  /** SFTP Access */
  sftpAccess?: boolean;
  /** Log Api Response Body */
  logApiResponseBodyTs?: number | null;
  /** Location Information on `expand` */
  locations?: Location18[];
  /** Primary Location Information on `expand` */
  primaryLocation?: PrimaryLocation;
  /** Received Email Information on `expand` */
  receivedEmails?: ReceivedEmail[];
  /** Contact Information on `expand` */
  contact?: Contact1;
  /** Is Deletable Information on `expand` */
  isDeletable?: boolean;
  /** Active Notification Alert Information on `expand` */
  activeNotificationAlerts?: ActiveNotificationAlert[];
  /** Location User Information on `expand` */
  locationUsers?: LocationUser[];
  /** Auth Role Information on `expand` */
  authRoles?: AuthRole[];
  /** Changelog Information on `expand` */
  changelogs?: Changelog[];
  /** Resource Information on `expand` */
  resources?: Resources;
  /** Domain Information on `expand` */
  domain?: Domain;
  /** User Information on `expand` */
  createdUser?: CreatedUser;
  /** Locationmarketplaces Information on `expand` */
  locationMarketplaces?: Locationmarketplace[];
  /** Email Blacklist Information on `expand` */
  emailBlacklist?: EmailBlacklist;
  /** Helppage Information on `expand` */
  helppage?: Helppage2;
  [key: string]: unknown;
}

export const data33Schema: Schema<Data33> = expandoObject({
  accountNumber: ['account_number', optional(nullable(string()))],
  brandingDomainUrl: ['branding_domain_url', optional(nullable(string()))],
  cellPhone: ['cell_phone', optional(nullable(string()))],
  companyName: ['company_name', optional(nullable(string()))],
  contactId: ['contact_id', optional(nullable(string()))],
  dateOfBirth: ['date_of_birth', optional(nullable(string()))],
  domainId: ['domain_id', optional(nullable(string()))],
  email: ['email', optional(string())],
  emailTrxReceipt: ['email_trx_receipt', optional(boolean())],
  homePhone: ['home_phone', optional(nullable(string()))],
  firstName: ['first_name', optional(nullable(string()))],
  lastName: ['last_name', optional(string())],
  locale: ['locale', optional(nullable(string()))],
  officePhone: ['office_phone', optional(nullable(string()))],
  officeExtPhone: ['office_ext_phone', optional(nullable(string()))],
  primaryLocationId: ['primary_location_id', optional(string())],
  requiresNewPassword: ['requires_new_password', optional(nullable(string()))],
  termsConditionCode: ['terms_condition_code', optional(nullable(string()))],
  tz: ['tz', optional(string())],
  uiPrefs: ['ui_prefs', optional(lazy(() => uiPrefsSchema))],
  username: ['username', optional(string())],
  userApiKey: ['user_api_key', optional(nullable(string()))],
  userHashKey: ['user_hash_key', optional(nullable(string()))],
  userTypeCode: ['user_type_code', optional(userTypeCodeEnumSchema)],
  password: ['password', optional(nullable(string()))],
  zip: ['zip', optional(nullable(string()))],
  locationId: ['location_id', optional(nullable(string()))],
  contactApiId: ['contact_api_id', optional(nullable(string()))],
  primaryLocationApiId: [
    'primary_location_api_id',
    optional(nullable(string())),
  ],
  statusCode: ['status_code', optional(nullable(statusCodeEnumSchema))],
  apiOnly: ['api_only', optional(boolean())],
  isInvitation: ['is_invitation', optional(boolean())],
  address: ['address', optional(lazy(() => address2Schema))],
  id: ['id', optional(string())],
  status: ['status', optional(boolean())],
  loginAttempts: ['login_attempts', optional(number())],
  lastLoginTs: ['last_login_ts', optional(number())],
  createdTs: ['created_ts', optional(number())],
  modifiedTs: ['modified_ts', optional(number())],
  createdUserId: ['created_user_id', optional(string())],
  termsAcceptedTs: ['terms_accepted_ts', optional(nullable(number()))],
  termsAgreeIp: ['terms_agree_ip', optional(nullable(string()))],
  currentDateTime: ['current_date_time', optional(string())],
  currentLoginIp: ['current_login_ip', optional(nullable(string()))],
  currentLogin: ['current_login', optional(nullable(number()))],
  sftpAccess: ['sftp_access', optional(boolean())],
  logApiResponseBodyTs: [
    'log_api_response_body_ts',
    optional(nullable(number())),
  ],
  locations: ['locations', optional(array(lazy(() => location18Schema)))],
  primaryLocation: [
    'primary_location',
    optional(lazy(() => primaryLocationSchema)),
  ],
  receivedEmails: [
    'received_emails',
    optional(array(lazy(() => receivedEmailSchema))),
  ],
  contact: ['contact', optional(lazy(() => contact1Schema))],
  isDeletable: ['isDeletable', optional(boolean())],
  activeNotificationAlerts: [
    'active_notification_alerts',
    optional(array(lazy(() => activeNotificationAlertSchema))),
  ],
  locationUsers: [
    'location_users',
    optional(array(lazy(() => locationUserSchema))),
  ],
  authRoles: ['auth_roles', optional(array(lazy(() => authRoleSchema)))],
  changelogs: ['changelogs', optional(array(lazy(() => changelogSchema)))],
  resources: ['resources', optional(lazy(() => resourcesSchema))],
  domain: ['domain', optional(lazy(() => domainSchema))],
  createdUser: ['created_user', optional(lazy(() => createdUserSchema))],
  locationMarketplaces: [
    'location_marketplaces',
    optional(array(lazy(() => locationmarketplaceSchema))),
  ],
  emailBlacklist: [
    'email_blacklist',
    optional(lazy(() => emailBlacklistSchema)),
  ],
  helppage: ['helppage', optional(lazy(() => helppage2Schema))],
});
