/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { BillingAddress5, billingAddress5Schema } from './billingAddress5';
import {
  List14LocationId,
  list14LocationIdSchema,
} from './containers/list14LocationId';

export interface List14 {
  /**
   * Account holder name
   * >The Name as it appears on Card.
   * >
   */
  accountHolderName?: string | null;
  /** The Expiration Date for the credit card. */
  expDate?: string;
  /** CVV */
  cvv?: string | null;
  /**
   * Account number
   * >A credit card number. Length 13-19.
   * >
   */
  accountNumber?: string;
  /** Billing Address Object */
  billingAddress?: BillingAddress5;
  /** Used to associate the Ticket with a Contact. */
  contactId?: string | null;
  /** Used to associate the Ticket with a Contact. */
  contactApiId?: string | null;
  /** A valid Location Id associated with the Contact for this Ticket */
  locationId?: List14LocationId;
  /** Location Api Id */
  locationApiId?: string | null;
  /** A unique, system-generated identifier for the Ticket. */
  id?: string;
  /** Created Time Stamp */
  createdTs?: number;
  /** User ID Created the register */
  createdUserId?: string | null;
  [key: string]: unknown;
}

export const list14Schema: Schema<List14> = expandoObject({
  accountHolderName: ['account_holder_name', optional(nullable(string()))],
  expDate: ['exp_date', optional(string())],
  cvv: ['cvv', optional(nullable(string()))],
  accountNumber: ['account_number', optional(string())],
  billingAddress: [
    'billing_address',
    optional(lazy(() => billingAddress5Schema)),
  ],
  contactId: ['contact_id', optional(nullable(string()))],
  contactApiId: ['contact_api_id', optional(nullable(string()))],
  locationId: ['location_id', optional(list14LocationIdSchema)],
  locationApiId: ['location_api_id', optional(nullable(string()))],
  id: ['id', optional(string())],
  createdTs: ['created_ts', optional(number())],
  createdUserId: ['created_user_id', optional(nullable(string()))],
});
