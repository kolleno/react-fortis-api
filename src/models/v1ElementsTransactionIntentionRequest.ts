/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { AchSecCodeEnum, achSecCodeEnumSchema } from './achSecCodeEnum';
import { ActionEnum, actionEnumSchema } from './actionEnum';
import {
  V1ElementsTransactionIntentionRequestAllowPartialAuthorizationOverride,
  v1ElementsTransactionIntentionRequestAllowPartialAuthorizationOverrideSchema,
} from './containers/v1ElementsTransactionIntentionRequestAllowPartialAuthorizationOverride';
import {
  V1ElementsTransactionIntentionRequestAutoDeclineCvvOverride,
  v1ElementsTransactionIntentionRequestAutoDeclineCvvOverrideSchema,
} from './containers/v1ElementsTransactionIntentionRequestAutoDeclineCvvOverride';
import {
  V1ElementsTransactionIntentionRequestAutoDeclineStreetOverride,
  v1ElementsTransactionIntentionRequestAutoDeclineStreetOverrideSchema,
} from './containers/v1ElementsTransactionIntentionRequestAutoDeclineStreetOverride';
import {
  V1ElementsTransactionIntentionRequestAutoDeclineZipOverride,
  v1ElementsTransactionIntentionRequestAutoDeclineZipOverrideSchema,
} from './containers/v1ElementsTransactionIntentionRequestAutoDeclineZipOverride';
import {
  V1ElementsTransactionIntentionRequestBankFundedOnlyOverride,
  v1ElementsTransactionIntentionRequestBankFundedOnlyOverrideSchema,
} from './containers/v1ElementsTransactionIntentionRequestBankFundedOnlyOverride';
import {
  V1ElementsTransactionIntentionRequestSaveAccount,
  v1ElementsTransactionIntentionRequestSaveAccountSchema,
} from './containers/v1ElementsTransactionIntentionRequestSaveAccount';
import {
  V1ElementsTransactionIntentionRequestSaveAccountTitle,
  v1ElementsTransactionIntentionRequestSaveAccountTitleSchema,
} from './containers/v1ElementsTransactionIntentionRequestSaveAccountTitle';
import {
  V1ElementsTransactionIntentionRequestSecondaryAmount,
  v1ElementsTransactionIntentionRequestSecondaryAmountSchema,
} from './containers/v1ElementsTransactionIntentionRequestSecondaryAmount';
import {
  V1ElementsTransactionIntentionRequestTaxAmount,
  v1ElementsTransactionIntentionRequestTaxAmountSchema,
} from './containers/v1ElementsTransactionIntentionRequestTaxAmount';
import {
  V1ElementsTransactionIntentionRequestTitle,
  v1ElementsTransactionIntentionRequestTitleSchema,
} from './containers/v1ElementsTransactionIntentionRequestTitle';
import { Method50, method50Schema } from './method50';

export interface V1ElementsTransactionIntentionRequest {
  /** The action to be performed */
  action?: ActionEnum | null;
  digitalWalletsOnly?: boolean;
  /** By default the system will try to offer all the availables payment methods from your account. But if you like, you can specify exactly what services you want to use. */
  methods?: Method50[];
  /** The total amount to be charged. Allowed on the actions: `sale`, `auth-only`, `refund` */
  amount?: number;
  /** Amount of Sales Tax. If supplied, this amount should be already included in the transaction amount. Allowed on the actions: `sale`, `auth-only`, `refund` */
  taxAmount?: V1ElementsTransactionIntentionRequestTaxAmount;
  /** Retained Amount. Allowed on the actions: `sale`, `auth-only`, `refund` */
  secondaryAmount?: V1ElementsTransactionIntentionRequestSecondaryAmount;
  /** Location ID */
  locationId?: string | null;
  /** Contact ID */
  contactId?: string | null;
  /** Specifies to tokenize card/bank information within the transaction. Allowed on the actions: `sale`, `auth-only`, `avs-only`, `refund` */
  saveAccount?: V1ElementsTransactionIntentionRequestSaveAccount;
  /** Specifies to tokenize card/bank information within the transaction. Allowed on the actions: `sale`, `auth-only`, `avs-only`, `refund` */
  saveAccountTitle?: V1ElementsTransactionIntentionRequestSaveAccountTitle;
  /** A title for the token. */
  title?: V1ElementsTransactionIntentionRequestTitle;
  /** SEC code for the transaction if it's an ACH transaction */
  achSecCode?: AchSecCodeEnum | null;
  /** Bank Funded Only Override */
  bankFundedOnlyOverride?: V1ElementsTransactionIntentionRequestBankFundedOnlyOverride;
  /** Allow partial Authorization Override */
  allowPartialAuthorizationOverride?: V1ElementsTransactionIntentionRequestAllowPartialAuthorizationOverride;
  /** Auto Decline Cvv Override */
  autoDeclineCvvOverride?: V1ElementsTransactionIntentionRequestAutoDeclineCvvOverride;
  /** Auto Decline Street Override */
  autoDeclineStreetOverride?: V1ElementsTransactionIntentionRequestAutoDeclineStreetOverride;
  /** Auto Decline Zip Override */
  autoDeclineZipOverride?: V1ElementsTransactionIntentionRequestAutoDeclineZipOverride;
  /** A custom text message that displays after the payment is processed. */
  message?: string | null;
  [key: string]: unknown;
}

export const v1ElementsTransactionIntentionRequestSchema: Schema<V1ElementsTransactionIntentionRequest> = expandoObject(
  {
    action: ['action', optional(nullable(actionEnumSchema))],
    digitalWalletsOnly: ['digitalWalletsOnly', optional(boolean())],
    methods: ['methods', optional(array(lazy(() => method50Schema)))],
    amount: ['amount', optional(number())],
    taxAmount: [
      'tax_amount',
      optional(v1ElementsTransactionIntentionRequestTaxAmountSchema),
    ],
    secondaryAmount: [
      'secondary_amount',
      optional(v1ElementsTransactionIntentionRequestSecondaryAmountSchema),
    ],
    locationId: ['location_id', optional(nullable(string()))],
    contactId: ['contact_id', optional(nullable(string()))],
    saveAccount: [
      'save_account',
      optional(v1ElementsTransactionIntentionRequestSaveAccountSchema),
    ],
    saveAccountTitle: [
      'save_account_title',
      optional(v1ElementsTransactionIntentionRequestSaveAccountTitleSchema),
    ],
    title: [
      'title',
      optional(v1ElementsTransactionIntentionRequestTitleSchema),
    ],
    achSecCode: ['ach_sec_code', optional(nullable(achSecCodeEnumSchema))],
    bankFundedOnlyOverride: [
      'bank_funded_only_override',
      optional(
        v1ElementsTransactionIntentionRequestBankFundedOnlyOverrideSchema
      ),
    ],
    allowPartialAuthorizationOverride: [
      'allow_partial_authorization_override',
      optional(
        v1ElementsTransactionIntentionRequestAllowPartialAuthorizationOverrideSchema
      ),
    ],
    autoDeclineCvvOverride: [
      'auto_decline_cvv_override',
      optional(
        v1ElementsTransactionIntentionRequestAutoDeclineCvvOverrideSchema
      ),
    ],
    autoDeclineStreetOverride: [
      'auto_decline_street_override',
      optional(
        v1ElementsTransactionIntentionRequestAutoDeclineStreetOverrideSchema
      ),
    ],
    autoDeclineZipOverride: [
      'auto_decline_zip_override',
      optional(
        v1ElementsTransactionIntentionRequestAutoDeclineZipOverrideSchema
      ),
    ],
    message: ['message', optional(nullable(string()))],
  }
);
