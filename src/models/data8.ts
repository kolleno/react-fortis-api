/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { AchSecCodeEnum, achSecCodeEnumSchema } from './achSecCodeEnum';
import { ActionEnum, actionEnumSchema } from './actionEnum';
import {
  Data8AllowPartialAuthorizationOverride,
  data8AllowPartialAuthorizationOverrideSchema,
} from './containers/data8AllowPartialAuthorizationOverride';
import {
  Data8AutoDeclineCvvOverride,
  data8AutoDeclineCvvOverrideSchema,
} from './containers/data8AutoDeclineCvvOverride';
import {
  Data8AutoDeclineStreetOverride,
  data8AutoDeclineStreetOverrideSchema,
} from './containers/data8AutoDeclineStreetOverride';
import {
  Data8AutoDeclineZipOverride,
  data8AutoDeclineZipOverrideSchema,
} from './containers/data8AutoDeclineZipOverride';
import {
  Data8BankFundedOnlyOverride,
  data8BankFundedOnlyOverrideSchema,
} from './containers/data8BankFundedOnlyOverride';
import {
  Data8SaveAccount,
  data8SaveAccountSchema,
} from './containers/data8SaveAccount';
import {
  Data8SaveAccountTitle,
  data8SaveAccountTitleSchema,
} from './containers/data8SaveAccountTitle';
import {
  Data8SecondaryAmount,
  data8SecondaryAmountSchema,
} from './containers/data8SecondaryAmount';
import {
  Data8TaxAmount,
  data8TaxAmountSchema,
} from './containers/data8TaxAmount';
import { Data8Title, data8TitleSchema } from './containers/data8Title';
import { Method3, method3Schema } from './method3';

export interface Data8 {
  /** The action to be performed */
  action?: ActionEnum | null;
  digitalWalletsOnly?: boolean;
  /** By default the system will try to offer all the availables payment methods from your account. But if you like, you can specify exactly what services you want to use. */
  methods?: Method3[];
  /** The total amount to be charged. Allowed on the actions: `sale`, `auth-only`, `refund` */
  amount?: number;
  /** Amount of Sales Tax. If supplied, this amount should be already included in the transaction amount. Allowed on the actions: `sale`, `auth-only`, `refund` */
  taxAmount?: Data8TaxAmount;
  /** Retained Amount. Allowed on the actions: `sale`, `auth-only`, `refund` */
  secondaryAmount?: Data8SecondaryAmount;
  /** Location ID */
  locationId?: string | null;
  /** Contact ID */
  contactId?: string | null;
  /** Specifies to tokenize card/bank information within the transaction. Allowed on the actions: `sale`, `auth-only`, `avs-only`, `refund` */
  saveAccount?: Data8SaveAccount;
  /** Specifies to tokenize card/bank information within the transaction. Allowed on the actions: `sale`, `auth-only`, `avs-only`, `refund` */
  saveAccountTitle?: Data8SaveAccountTitle;
  /** A title for the token. */
  title?: Data8Title;
  /** SEC code for the transaction if it's an ACH transaction */
  achSecCode?: AchSecCodeEnum | null;
  /** Bank Funded Only Override */
  bankFundedOnlyOverride?: Data8BankFundedOnlyOverride;
  /** Allow partial Authorization Override */
  allowPartialAuthorizationOverride?: Data8AllowPartialAuthorizationOverride;
  /** Auto Decline Cvv Override */
  autoDeclineCvvOverride?: Data8AutoDeclineCvvOverride;
  /** Auto Decline Street Override */
  autoDeclineStreetOverride?: Data8AutoDeclineStreetOverride;
  /** Auto Decline Zip Override */
  autoDeclineZipOverride?: Data8AutoDeclineZipOverride;
  /** A custom text message that displays after the payment is processed. */
  message?: string | null;
  /**
   * A JWT to be used to create the elements.
   * > This is a one-time only use token.
   * > Do not store for long term use, it expires after 48 hours.
   */
  clientToken?: string;
  [key: string]: unknown;
}

export const data8Schema: Schema<Data8> = expandoObject({
  action: ['action', optional(nullable(actionEnumSchema))],
  digitalWalletsOnly: ['digitalWalletsOnly', optional(boolean())],
  methods: ['methods', optional(array(lazy(() => method3Schema)))],
  amount: ['amount', optional(number())],
  taxAmount: ['tax_amount', optional(data8TaxAmountSchema)],
  secondaryAmount: ['secondary_amount', optional(data8SecondaryAmountSchema)],
  locationId: ['location_id', optional(nullable(string()))],
  contactId: ['contact_id', optional(nullable(string()))],
  saveAccount: ['save_account', optional(data8SaveAccountSchema)],
  saveAccountTitle: [
    'save_account_title',
    optional(data8SaveAccountTitleSchema),
  ],
  title: ['title', optional(data8TitleSchema)],
  achSecCode: ['ach_sec_code', optional(nullable(achSecCodeEnumSchema))],
  bankFundedOnlyOverride: [
    'bank_funded_only_override',
    optional(data8BankFundedOnlyOverrideSchema),
  ],
  allowPartialAuthorizationOverride: [
    'allow_partial_authorization_override',
    optional(data8AllowPartialAuthorizationOverrideSchema),
  ],
  autoDeclineCvvOverride: [
    'auto_decline_cvv_override',
    optional(data8AutoDeclineCvvOverrideSchema),
  ],
  autoDeclineStreetOverride: [
    'auto_decline_street_override',
    optional(data8AutoDeclineStreetOverrideSchema),
  ],
  autoDeclineZipOverride: [
    'auto_decline_zip_override',
    optional(data8AutoDeclineZipOverrideSchema),
  ],
  message: ['message', optional(nullable(string()))],
  clientToken: ['client_token', optional(string())],
});
