/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  expandoObject,
  lazy,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { AltBankAccount, altBankAccountSchema } from './altBankAccount';
import { AppDeliveryEnum, appDeliveryEnumSchema } from './appDeliveryEnum';
import { BankAccount, bankAccountSchema } from './bankAccount';
import {
  BusinessCategoryEnum,
  businessCategoryEnumSchema,
} from './businessCategoryEnum';
import { BusinessTypeEnum, businessTypeEnumSchema } from './businessTypeEnum';
import { Contact11, contact11Schema } from './contact11';
import { Location20, location20Schema } from './location20';
import {
  OwnershipTypeEnum,
  ownershipTypeEnumSchema,
} from './ownershipTypeEnum';
import {
  PrimaryPrincipal1,
  primaryPrincipal1Schema,
} from './primaryPrincipal1';
import { SecCodeEnum, secCodeEnumSchema } from './secCodeEnum';

export interface V1OnboardingRequest {
  /** Location ID */
  parentId?: string | null;
  /** The Primary Principal. */
  primaryPrincipal: PrimaryPrincipal1;
  /** The ID of the template to be used - this value will be provided by Fortis. */
  templateCode: string;
  /** Merchant email address. */
  email: string;
  /** Merchant 'Doing Business As' name. */
  dbaName: string;
  /** The Location. */
  location: Location20;
  /** The delivery method of the app to the merchant. */
  appDelivery: AppDeliveryEnum;
  /**
   * The Category of the merchant's business
   * >(Required if "business_type" is provided). Note: "business_type" must belong to the appropriate "business_category"
   * >
   */
  businessCategory?: BusinessCategoryEnum | null;
  /** The Type of a merchant's business. */
  businessType?: BusinessTypeEnum | null;
  /** Description of Goods or Services. */
  businessDescription?: string | null;
  /**
   * Card present/swiped percentage
   * >The sum total of "swiped_percent", "keyed_percent" and "ecommerce_percent" must add up to 100.
   * >
   */
  swipedPercent?: number | null;
  /**
   * Card not present/keyed percentage
   * >The sum total of "swiped_percent", "keyed_percent" and "ecommerce_percent" must add up to 100.
   * >
   */
  keyedPercent?: number | null;
  /**
   * eCommerce percentage.
   * >The sum total of "swiped_percent", "keyed_percent" and "ecommerce_percent" must add up to 100.
   * >
   */
  ecommercePercent?: number | null;
  /** The Ownership Type of the merchant's business. */
  ownershipType?: OwnershipTypeEnum | null;
  /** Federal Tax ID (EIN). */
  fedTaxId?: string | null;
  /**
   * Average Transaction Amount Range
   * >(Applicable when Template Application Type is 'credit_card' or 'both').
   * >
   */
  ccAverageTicketRange?: number | null;
  /**
   * Monthly Processing Volume Range
   * >(Applicable when Template Application Type is 'credit_card' or 'both').
   * >
   */
  ccMonthlyVolumeRange?: number | null;
  /**
   * Highest transaction amount rounded to the next dollar
   * > (No decimal and applicable when Template Application Type is 'credit_card' or 'both').
   * >
   */
  ccHighTicket?: number | null;
  /**
   * Average Transaction Amount Range
   * >(Applicable when Template Application Type is 'echeck' or 'both').
   * >
   */
  ecAverageTicketRange?: number | null;
  /**
   * Monthly Processing Volume Range
   * >(Applicable when Template Application Type is 'echeck' or 'both').
   * >
   */
  ecMonthlyVolumeRange?: number | null;
  /**
   * Highest transaction amount rounded to the next dollar
   * >(No decimal and applicable when Template Application Type is 'echeck' or 'both').
   * >
   */
  ecHighTicket?: number | null;
  /**
   * Merchant's business website.
   * >(Required if "ecommerce_percent" is greater than 0).
   * >
   */
  website?: string | null;
  /** The Bank Account. */
  bankAccount?: BankAccount;
  /** The Alternative Bank Account. */
  altBankAccount?: AltBankAccount;
  /**
   * Merchant legal name.
   * >(leave blank if same as DBA name).
   * >
   */
  legalName?: string | null;
  /** The Contact. */
  contact: Contact11;
  /** Client Issues Id to track that can be used to track each submitted merchant application. This id should be generated and sent in the request payload, and will be returned in the response payload. If no id is submitted in the payload request, this field will be null in the response. */
  clientAppId?: string | null;
  /** Array of SEC codes that will be allowed, Only applicable for ACH. Valid values are 'PPD', 'WEB', 'TEL', 'CCD'. */
  secCodes?: SecCodeEnum[];
  [key: string]: unknown;
}

export const v1OnboardingRequestSchema: Schema<V1OnboardingRequest> = expandoObject(
  {
    parentId: ['parent_id', optional(nullable(string()))],
    primaryPrincipal: [
      'primary_principal',
      lazy(() => primaryPrincipal1Schema),
    ],
    templateCode: ['template_code', string()],
    email: ['email', string()],
    dbaName: ['dba_name', string()],
    location: ['location', lazy(() => location20Schema)],
    appDelivery: ['app_delivery', appDeliveryEnumSchema],
    businessCategory: [
      'business_category',
      optional(nullable(businessCategoryEnumSchema)),
    ],
    businessType: ['business_type', optional(nullable(businessTypeEnumSchema))],
    businessDescription: ['business_description', optional(nullable(string()))],
    swipedPercent: ['swiped_percent', optional(nullable(number()))],
    keyedPercent: ['keyed_percent', optional(nullable(number()))],
    ecommercePercent: ['ecommerce_percent', optional(nullable(number()))],
    ownershipType: [
      'ownership_type',
      optional(nullable(ownershipTypeEnumSchema)),
    ],
    fedTaxId: ['fed_tax_id', optional(nullable(string()))],
    ccAverageTicketRange: [
      'cc_average_ticket_range',
      optional(nullable(number())),
    ],
    ccMonthlyVolumeRange: [
      'cc_monthly_volume_range',
      optional(nullable(number())),
    ],
    ccHighTicket: ['cc_high_ticket', optional(nullable(number()))],
    ecAverageTicketRange: [
      'ec_average_ticket_range',
      optional(nullable(number())),
    ],
    ecMonthlyVolumeRange: [
      'ec_monthly_volume_range',
      optional(nullable(number())),
    ],
    ecHighTicket: ['ec_high_ticket', optional(nullable(number()))],
    website: ['website', optional(nullable(string()))],
    bankAccount: ['bank_account', optional(lazy(() => bankAccountSchema))],
    altBankAccount: [
      'alt_bank_account',
      optional(lazy(() => altBankAccountSchema)),
    ],
    legalName: ['legal_name', optional(nullable(string()))],
    contact: ['contact', lazy(() => contact11Schema)],
    clientAppId: ['client_app_id', optional(nullable(string()))],
    secCodes: ['sec_codes', optional(array(secCodeEnumSchema))],
  }
);
