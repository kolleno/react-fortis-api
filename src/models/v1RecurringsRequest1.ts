/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  expandoObject,
  nullable,
  number,
  optional,
  Schema,
  string,
} from '../schema';
import { IntervalTypeEnum, intervalTypeEnumSchema } from './intervalTypeEnum';
import {
  PaymentMethod1Enum,
  paymentMethod1EnumSchema,
} from './paymentMethod1Enum';
import { StatusEnum, statusEnumSchema } from './statusEnum';

export interface V1RecurringsRequest1 {
  /** Next Run Date */
  nextRunDate?: string | null;
  /** Token ID */
  accountVaultId?: string | null;
  /** Token ID */
  tokenId?: string | null;
  /** Active */
  active?: boolean;
  /** Description */
  description?: string | null;
  /** End date */
  endDate?: string | null;
  /** Installment Total Count */
  installmentTotalCount?: number | null;
  /** Interval */
  interval?: number | null;
  /** Interval Type */
  intervalType?: IntervalTypeEnum | null;
  /** Location ID */
  locationId?: string | null;
  /** Notification Days */
  notificationDays?: number | null;
  /** Payment Method */
  paymentMethod?: PaymentMethod1Enum | null;
  /** Product Transaction ID */
  productTransactionId?: string | null;
  /** Recurring ID */
  recurringId?: string | null;
  /** Recurring Api ID */
  recurringApiId?: string | null;
  /** Start date */
  startDate?: string | null;
  /** Status */
  status?: StatusEnum | null;
  /** Transaction amount */
  transactionAmount?: number | null;
  /** Terms Agree */
  termsAgree?: boolean;
  /** Terms Agree Ip */
  termsAgreeIp?: string | null;
  /** Custom field used for integrations */
  recurringC1?: string | null;
  /** Custom field used for integrations */
  recurringC2?: string | null;
  /** Custom field used for integrations */
  recurringC3?: string | null;
  /** Send To Proc As Recur */
  sendToProcAsRecur?: boolean;
  /** Tags */
  tags?: string[] | null;
  /** Retained Amount */
  secondaryAmount?: number | null;
  /** Contact ID */
  contactId?: string | null;
  [key: string]: unknown;
}

export const v1RecurringsRequest1Schema: Schema<V1RecurringsRequest1> = expandoObject(
  {
    nextRunDate: ['next_run_date', optional(nullable(string()))],
    accountVaultId: ['account_vault_id', optional(nullable(string()))],
    tokenId: ['token_id', optional(nullable(string()))],
    active: ['active', optional(boolean())],
    description: ['description', optional(nullable(string()))],
    endDate: ['end_date', optional(nullable(string()))],
    installmentTotalCount: [
      'installment_total_count',
      optional(nullable(number())),
    ],
    interval: ['interval', optional(nullable(number()))],
    intervalType: ['interval_type', optional(nullable(intervalTypeEnumSchema))],
    locationId: ['location_id', optional(nullable(string()))],
    notificationDays: ['notification_days', optional(nullable(number()))],
    paymentMethod: [
      'payment_method',
      optional(nullable(paymentMethod1EnumSchema)),
    ],
    productTransactionId: [
      'product_transaction_id',
      optional(nullable(string())),
    ],
    recurringId: ['recurring_id', optional(nullable(string()))],
    recurringApiId: ['recurring_api_id', optional(nullable(string()))],
    startDate: ['start_date', optional(nullable(string()))],
    status: ['status', optional(nullable(statusEnumSchema))],
    transactionAmount: ['transaction_amount', optional(nullable(number()))],
    termsAgree: ['terms_agree', optional(boolean())],
    termsAgreeIp: ['terms_agree_ip', optional(nullable(string()))],
    recurringC1: ['recurring_c1', optional(nullable(string()))],
    recurringC2: ['recurring_c2', optional(nullable(string()))],
    recurringC3: ['recurring_c3', optional(nullable(string()))],
    sendToProcAsRecur: ['send_to_proc_as_recur', optional(boolean())],
    tags: ['tags', optional(nullable(array(string())))],
    secondaryAmount: ['secondary_amount', optional(nullable(number()))],
    contactId: ['contact_id', optional(nullable(string()))],
  }
);
