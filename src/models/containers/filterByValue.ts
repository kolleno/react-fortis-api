/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { oneOf, Schema, validateAndMap } from '../../schema';
import {
  FilterByValueCase0,
  filterByValueCase0Schema,
} from './filterByValueCase0';
import {
  FilterByValueCase1,
  filterByValueCase1Schema,
} from './filterByValueCase1';

/** This is a container type for one-of types. */
export type FilterByValue = FilterByValueCase0 | FilterByValueCase1;

export const filterByValueSchema: Schema<FilterByValue> = oneOf([
  filterByValueCase0Schema,
  filterByValueCase1Schema,
]);

export namespace FilterByValue {
  /**
   * Validation method to narrow down union type to FilterByValueCase0 type case.
   *
   * This is FilterByValueCase0 case.
   */
  export function isFilterByValueCase0(
    value: unknown
  ): value is FilterByValueCase0 {
    const validationResult = validateAndMap(value, filterByValueCase0Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to FilterByValueCase1 type case.
   *
   * This is FilterByValueCase1 case.
   */
  export function isFilterByValueCase1(
    value: unknown
  ): value is FilterByValueCase1 {
    const validationResult = validateAndMap(value, filterByValueCase1Schema);
    return validationResult.errors === false;
  }
}
