/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ResponseFullboarding,
  responseFullboardingSchema,
} from '../models/responseFullboarding';
import {
  V1FullboardingRequest,
  v1FullboardingRequestSchema,
} from '../models/v1FullboardingRequest';
import { BaseController } from './baseController';
import { Response401tokenError } from '../errors/response401tokenError';
import { Response412Error } from '../errors/response412Error';

export class FullBoardingController extends BaseController {
  /**
   * This method is used to fully board a merchant to the platform. When using this method, you must
   * provide data for each "Required" property. See the description for each of these properties for more
   * information about their requirement criteria.
   *
   * @param body
   * @return Response from the API call
   */
  async merchantBoardingFull(
    body: V1FullboardingRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseFullboarding>> {
    const req = this.createRequest('POST', '/v1/fullboarding');
    const mapped = req.prepareArgs({
      body: [body, v1FullboardingRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseFullboardingSchema, requestOptions);
  }
}
