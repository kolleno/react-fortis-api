/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { Expand57Enum, expand57EnumSchema } from '../models/expand57Enum';
import {
  ResponseTransaction,
  responseTransactionSchema,
} from '../models/responseTransaction';
import {
  V1TransactionsAchCreditKeyedRequest,
  v1TransactionsAchCreditKeyedRequestSchema,
} from '../models/v1TransactionsAchCreditKeyedRequest';
import {
  V1TransactionsAchCreditPrevTrxnRequest,
  v1TransactionsAchCreditPrevTrxnRequestSchema,
} from '../models/v1TransactionsAchCreditPrevTrxnRequest';
import {
  V1TransactionsAchCreditTokenRequest,
  v1TransactionsAchCreditTokenRequestSchema,
} from '../models/v1TransactionsAchCreditTokenRequest';
import {
  V1TransactionsAchDebitKeyedRequest,
  v1TransactionsAchDebitKeyedRequestSchema,
} from '../models/v1TransactionsAchDebitKeyedRequest';
import {
  V1TransactionsAchDebitPrevTrxnRequest,
  v1TransactionsAchDebitPrevTrxnRequestSchema,
} from '../models/v1TransactionsAchDebitPrevTrxnRequest';
import {
  V1TransactionsAchDebitTokenRequest,
  v1TransactionsAchDebitTokenRequestSchema,
} from '../models/v1TransactionsAchDebitTokenRequest';
import {
  V1TransactionsAchRefundPrevTrxnRequest,
  v1TransactionsAchRefundPrevTrxnRequestSchema,
} from '../models/v1TransactionsAchRefundPrevTrxnRequest';
import { array, optional } from '../schema';
import { BaseController } from './baseController';
import { Response401tokenError } from '../errors/response401tokenError';
import { Response412Error } from '../errors/response412Error';

export class TransactionsACHController extends BaseController {
  /**
   * Create a new keyed ACH credit transaction
   *
   * @param body
   * @param expand       Most endpoints in the API have a way to
   *                                                                   retrieve extra data related to the current
   *                                                                   record being retrieved. For example, if the API
   *                                                                   request is for the accountvaults endpoint, and
   *                                                                   the end user also needs to know which contact
   *                                                                   the token belongs to, this data can be returned
   *                                                                   in the accountvaults endpoint request.
   * @return Response from the API call
   */
  async aCHCredit(
    body: V1TransactionsAchCreditKeyedRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest('POST', '/v1/transactions/ach/credit/keyed');
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsAchCreditKeyedRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }

  /**
   * Create a new ACH credit transaction using previous transaction id
   *
   * @param body
   * @param expand       Most endpoints in the API have a way to
   *                                                                      retrieve extra data related to the current
   *                                                                      record being retrieved. For example, if the
   *                                                                      API request is for the accountvaults endpoint,
   *                                                                      and the end user also needs to know which
   *                                                                      contact the token belongs to, this data can
   *                                                                      be returned in the accountvaults endpoint
   *                                                                      request.
   * @return Response from the API call
   */
  async aCHCreditPreviousTransaction(
    body: V1TransactionsAchCreditPrevTrxnRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest(
      'POST',
      '/v1/transactions/ach/credit/prev-trxn'
    );
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsAchCreditPrevTrxnRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }

  /**
   * Create a new tokenized ACH credit transaction
   *
   * @param body
   * @param expand       Most endpoints in the API have a way to
   *                                                                   retrieve extra data related to the current
   *                                                                   record being retrieved. For example, if the API
   *                                                                   request is for the accountvaults endpoint, and
   *                                                                   the end user also needs to know which contact
   *                                                                   the token belongs to, this data can be returned
   *                                                                   in the accountvaults endpoint request.
   * @return Response from the API call
   */
  async aCHCreditTokenized(
    body: V1TransactionsAchCreditTokenRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest('POST', '/v1/transactions/ach/credit/token');
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsAchCreditTokenRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }

  /**
   * Create a new keyed ACH debit transaction
   *
   * @param body
   * @param expand       Most endpoints in the API have a way to retrieve
   *                                                                  extra data related to the current record being
   *                                                                  retrieved. For example, if the API request is for
   *                                                                  the accountvaults endpoint, and the end user also
   *                                                                  needs to know which contact the token belongs to,
   *                                                                  this data can be returned in the accountvaults
   *                                                                  endpoint request.
   * @return Response from the API call
   */
  async aCHDebit(
    body: V1TransactionsAchDebitKeyedRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest('POST', '/v1/transactions/ach/debit/keyed');
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsAchDebitKeyedRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }

  /**
   * Create a new ACH debit transaction using previous transaction id
   *
   * @param body
   * @param expand       Most endpoints in the API have a way to
   *                                                                     retrieve extra data related to the current
   *                                                                     record being retrieved. For example, if the
   *                                                                     API request is for the accountvaults endpoint,
   *                                                                     and the end user also needs to know which
   *                                                                     contact the token belongs to, this data can be
   *                                                                     returned in the accountvaults endpoint request.
   * @return Response from the API call
   */
  async aCHDebitPreviousTransaction(
    body: V1TransactionsAchDebitPrevTrxnRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest(
      'POST',
      '/v1/transactions/ach/debit/prev-trxn'
    );
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsAchDebitPrevTrxnRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }

  /**
   * Create a new tokenized ACH debit transaction
   *
   * @param body
   * @param expand       Most endpoints in the API have a way to retrieve
   *                                                                  extra data related to the current record being
   *                                                                  retrieved. For example, if the API request is for
   *                                                                  the accountvaults endpoint, and the end user also
   *                                                                  needs to know which contact the token belongs to,
   *                                                                  this data can be returned in the accountvaults
   *                                                                  endpoint request.
   * @return Response from the API call
   */
  async aCHDebitTokenized(
    body: V1TransactionsAchDebitTokenRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest('POST', '/v1/transactions/ach/debit/token');
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsAchDebitTokenRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }

  /**
   * Create a new ACH refund transaction using previous transaction id
   *
   * @param body
   * @param expand       Most endpoints in the API have a way to
   *                                                                      retrieve extra data related to the current
   *                                                                      record being retrieved. For example, if the
   *                                                                      API request is for the accountvaults endpoint,
   *                                                                      and the end user also needs to know which
   *                                                                      contact the token belongs to, this data can
   *                                                                      be returned in the accountvaults endpoint
   *                                                                      request.
   * @return Response from the API call
   */
  async aCHRefundPreviousTransaction(
    body: V1TransactionsAchRefundPrevTrxnRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest(
      'POST',
      '/v1/transactions/ach/refund/prev-trxn'
    );
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsAchRefundPrevTrxnRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }
}
