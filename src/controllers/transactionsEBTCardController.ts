/**
 * Fortis APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { Expand57Enum, expand57EnumSchema } from '../models/expand57Enum';
import {
  ResponseTransaction,
  responseTransactionSchema,
} from '../models/responseTransaction';
import {
  V1TransactionsEbtVoucherClearRefundKeyedRequest,
  v1TransactionsEbtVoucherClearRefundKeyedRequestSchema,
} from '../models/v1TransactionsEbtVoucherClearRefundKeyedRequest';
import {
  V1TransactionsEbtVoucherClearSaleKeyedRequest,
  v1TransactionsEbtVoucherClearSaleKeyedRequestSchema,
} from '../models/v1TransactionsEbtVoucherClearSaleKeyedRequest';
import { array, optional } from '../schema';
import { BaseController } from './baseController';
import { Response401tokenError } from '../errors/response401tokenError';
import { Response412Error } from '../errors/response412Error';

export class TransactionsEBTCardController extends BaseController {
  /**
   * Create a new keyed EBT voucher clear refund transaction
   *
   * @param body
   * @param expand       Most endpoints in the API have a
   *                                                                               way to retrieve extra data related
   *                                                                               to the current record being
   *                                                                               retrieved. For example, if the API
   *                                                                               request is for the accountvaults
   *                                                                               endpoint, and the end user also
   *                                                                               needs to know which contact the
   *                                                                               token belongs to, this data can be
   *                                                                               returned in the accountvaults
   *                                                                               endpoint request.
   * @return Response from the API call
   */
  async eBTVoucherClearRefund(
    body: V1TransactionsEbtVoucherClearRefundKeyedRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest(
      'POST',
      '/v1/transactions/ebt/voucher-clear-refund/keyed'
    );
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsEbtVoucherClearRefundKeyedRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }

  /**
   * Create a new keyed EBT voucher clear sale transaction
   *
   * @param body
   * @param expand       Most endpoints in the API have a way
   *                                                                             to retrieve extra data related to the
   *                                                                             current record being retrieved. For
   *                                                                             example, if the API request is for the
   *                                                                             accountvaults endpoint, and the end
   *                                                                             user also needs to know which contact
   *                                                                             the token belongs to, this data can be
   *                                                                             returned in the accountvaults endpoint
   *                                                                             request.
   * @return Response from the API call
   */
  async eBTVoucherClearSale(
    body: V1TransactionsEbtVoucherClearSaleKeyedRequest,
    expand?: Expand57Enum[],
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ResponseTransaction>> {
    const req = this.createRequest(
      'POST',
      '/v1/transactions/ebt/voucher-clear-sale/keyed'
    );
    const mapped = req.prepareArgs({
      body: [body, v1TransactionsEbtVoucherClearSaleKeyedRequestSchema],
      expand: [expand, optional(array(expand57EnumSchema))],
    });
    req.header('Content-Type', 'application/json');
    req.query('expand', mapped.expand);
    req.json(mapped.body);
    req.throwOn(401, Response401tokenError, 'Unauthorized');
    req.throwOn(412, Response412Error, 'Precondition Failed');
    req.authenticate([{ userId: true, userApiKey: true, developerId: true }]);
    return req.callAsJson(responseTransactionSchema, requestOptions);
  }
}
